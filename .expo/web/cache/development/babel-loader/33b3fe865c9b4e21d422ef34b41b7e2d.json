{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport firebase from \"firebase\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport CustomActions from \"./CustomActions\";\nimport MapView from 'react-native-maps';\nimport 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: {\n            _id: data.user._id,\n            name: data.user.name,\n            avatar: data.user.avatar\n          },\n          image: data.image || null,\n          location: data.location || null\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n\n      _this.saveMessages();\n    };\n\n    _this.renderCustomActions = function (props) {\n      return _jsx(CustomActions, _objectSpread({}, props));\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: '',\n        name: '',\n        avatar: '',\n        image: null,\n        location: null\n      },\n      isConnected: false,\n      image: null,\n      location: null\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyAbWnB4CkY9vao7qH88JOHYJYPZOoevRmM\",\n      authDomain: \"chatty-534b5.firebaseapp.com\",\n      projectId: \"chatty-534b5\",\n      storageBucket: \"chatty-534b5.appspot.com\",\n      messagingSenderId: \"1070758162020\",\n      appId: \"1:1070758162020:web:c3b358957d32924167b971\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection('messages');\n    _this.refMsgsUser = null;\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              messages = '';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = [];\n\n            case 7:\n              messages = _context.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t1 = _context[\"catch\"](1);\n              console.log(_context.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              this.setState({\n                messages: []\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      if (name === '') name = 'anonymous user';\n      this.props.navigation.setOptions({\n        title: name\n      });\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          firebase.auth().signInAnonymously();\n        }\n\n        _this2.setState({\n          messages: [],\n          uid: user.uid,\n          user: {\n            _id: user.uid,\n            name: name,\n            avatar: 'https://i.pravatar.cc/150?u=${user.uid}'\n          }\n        });\n\n        _this2.refMsgsUser = firebase.firestore().collection('messages').where('uid', '==', user.uid);\n      });\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n\n          console.log('online');\n          _this2.unsubscribe = _this2.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n\n          _this2.saveMessages();\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n\n          console.log('offline');\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        uid: this.state.uid,\n        _id: message._id,\n        text: message.text || '',\n        createdAt: message.createdAt,\n        user: this.state.user,\n        image: message.image || '',\n        location: message.location || null\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.isConnected) {\n        this.authUnsubscribe();\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.addMessage();\n\n        _this3.saveMessages();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: 'orange'\n          },\n          left: {\n            backgroundColor: 'yellow'\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderCustomView\",\n    value: function renderCustomView(props) {\n      var currentMessage = props.currentMessage;\n\n      if (currentMessage.location) {\n        return _jsx(MapView, {\n          style: {\n            width: 150,\n            height: 100,\n            borderRadius: 13,\n            margin: 3\n          },\n          region: {\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return _jsx(InputToolbar, _objectSpread({}, props));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var bgColor = this.props.route.params.bgColor;\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: {\n            backgroundColor: bgColor,\n            width: '100%',\n            height: '100%'\n          },\n          children: [_jsx(GiftedChat, {\n            style: styles.giftedChat,\n            renderBubble: this.renderBubble.bind(this),\n            renderInputToolbar: this.renderInputToolbar.bind(this),\n            messages: this.state.messages,\n            showUserAvatar: true,\n            renderActions: this.renderCustomActions,\n            renderCustomView: this.renderCustomView,\n            onSend: function onSend(messages) {\n              return _this4.onSend(messages);\n            },\n            user: {\n              _id: this.state.user._id,\n              name: this.state.name,\n              avatar: this.state.avatar\n            }\n          }), Platform.OS === 'android' ? _jsx(KeyboardAvoidingView, {\n            behavior: \"height\"\n          }) : null, _jsx(Pressable, {\n            onPress: function onPress() {\n              return _this4.props.navigation.navigate('Start');\n            },\n            children: _jsx(Text, {\n              style: styles.startButton,\n              children: \"Go To Start\"\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  startButton: {\n    fontSize: 16,\n    minHeight: 50,\n    alignSelf: 'center',\n    backgroundColor: 'lightblue',\n    borderRadius: 20,\n    textAlignVertical: 'center'\n  },\n  giftedChat: {\n    color: '#000'\n  }\n});","map":{"version":3,"names":["React","GiftedChat","Bubble","InputToolbar","firebase","AsyncStorage","NetInfo","CustomActions","MapView","Chat","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","name","avatar","image","location","setState","saveMessages","renderCustomActions","props","state","uid","isConnected","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","referenceChatMessages","firestore","collection","refMsgsUser","getItem","JSON","parse","console","log","message","setItem","stringify","removeItem","route","params","navigation","setOptions","title","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","where","fetch","then","connection","unsubscribe","orderBy","onSnapshot","getMessages","add","previousState","append","addMessage","right","backgroundColor","left","currentMessage","width","height","borderRadius","margin","latitude","longitude","latitudeDelta","longitudeDelta","bgColor","styles","container","giftedChat","renderBubble","bind","renderInputToolbar","renderCustomView","onSend","Platform","OS","navigate","startButton","Component","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","fontSize","minHeight","alignSelf","textAlignVertical","color"],"sources":["C:/Users/dani/Desktop/Toni/CF_course/chat_app-master/chat_app-master/components/Chat.js"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Pressable, Text, Platform, KeyboardAvoidingView, } from 'react-native';\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport firebase from \"firebase\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport CustomActions from './CustomActions';\nimport MapView from 'react-native-maps';\nimport 'firebase/firestore';\n\n\nexport default class Chat extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: '',\n        name: '',\n        avatar: '',\n        image: null,\n        location: null,\n      },\n      isConnected: false,\n      image: null,\n      location: null\n    }\n\n    // Firebase configuration\n    const firebaseConfig = {\n      apiKey: \"AIzaSyAbWnB4CkY9vao7qH88JOHYJYPZOoevRmM\",\n      authDomain: \"chatty-534b5.firebaseapp.com\",\n      projectId: \"chatty-534b5\",\n      storageBucket: \"chatty-534b5.appspot.com\",\n      messagingSenderId: \"1070758162020\",\n      appId: \"1:1070758162020:web:c3b358957d32924167b971\"\n    };\n\n    //  Initialize database with config-data\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig)\n    }\n\n    // reference the database\n    this.referenceChatMessages = firebase.firestore().collection('messages')\n    this.refMsgsUser = null\n    }\n\n  // Retrieve messages from async storage\n  async getMessages() {\n    let messages = '';\n    try {\n      messages = await AsyncStorage.getItem('messages') || [];\n      this.setState({\n        messages: JSON.parse(messages)\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  // Save messages to async storage\n\n  async saveMessages() {\n    try {\n      await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  // Delete messages from async storage\n\n  async deleteMessages() {\n    try {\n      await AsyncStorage.removeItem('messages');\n      this.setState({\n        messages: []\n      })\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n   componentDidMount() {\n\n    // Get prop username from start screen\n    let name = this.props.route.params.name\n    // Check if props empty\n    if (name === '') name = 'anonymous user'\n    // Set title to username\n    this.props.navigation.setOptions({ title: name })\n\n    \n    // Authentication events\n    this.authUnsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        firebase.auth().signInAnonymously();\n      }\n     // Update user\n      this.setState({\n        messages: [],\n        uid: user.uid,\n        user: {\n          _id: user.uid,\n          name: name,\n          avatar: 'https://i.pravatar.cc/150?u=${user.uid}',\n        },\n      });\n\n      // Referencing messages of current user\n      this.refMsgsUser = firebase\n      .firestore()\n      .collection('messages')\n      .where('uid', '==', user.uid)\n    })\n\n    // Check if user is online\n\n    NetInfo.fetch().then((connection) => {\n      if (connection.isConnected) {\n        \n        this.setState({ isConnected: true })\n        console.log('online')\n\n        // Listens for updates in the collection\n        this.unsubscribe = this.referenceChatMessages\n            .orderBy('createdAt', 'desc')\n            .onSnapshot(this.onCollectionUpdate)\n\n\n        // save messages if user is online\n        this.saveMessages()\n      } else {\n        // if the user is offline\n        this.setState({ isConnected: false })\n        console.log('offline')\n        // retrieve messages from AsyncStorage\n        this.getMessages()\n      }\n    })\n   }\n\n      // Adding message to the database\n      addMessage() {\n        const message = this.state.messages[0]\n        // Add a new message to the firebase collection\n        this.referenceChatMessages.add({\n          uid: this.state.uid,\n          _id: message._id,\n          text: message.text || '',\n          createdAt: message.createdAt,\n          user: this.state.user,\n          image: message.image || '',\n          location: message.location || null,\n        })\n      }\n\n      componentWillUnmount() {\n        if (this.state.isConnected) {\n          // stop listening to authentication\n          this.authUnsubscribe()\n          // stop listening for changes\n          this.unsubscribe()\n        }\n      }\n\n      // Updated message state\n   onCollectionUpdate = (querySnapshot) => {\n    const messages = [];\n    querySnapshot.forEach((doc) => {\n      // Get the QueryDocumentSnapshot's data\n      let data = doc.data();\n      messages.push({\n        _id: data._id,\n        text: data.text,\n        createdAt: data.createdAt.toDate(),\n        user: {\n          _id: data.user._id,\n          name: data.user.name,\n          avatar: data.user.avatar,\n        },\n        image: data.image || null,\n        location: data.location || null,\n     });\n    });\n    this.setState({\n      messages: messages,\n    });\n    this.saveMessages()\n  };\n\n\n\n    // User sends a message\n\n    onSend(messages = []) {\n      this.setState(\n        (previousState) => ({\n          messages: GiftedChat.append(previousState.messages, messages),\n        }),\n        () => {\n          this.addMessage()\n          this.saveMessages()\n        }\n      )\n    }\n\n  renderBubble(props) {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: 'orange'\n          },\n          left: {\n            backgroundColor: 'yellow',\n          },\n        }}\n      />\n    );\n  }\n\n  renderCustomView(props) {\n    const { currentMessage } = props;\n    if (currentMessage.location) {\n      return (\n        <MapView\n          style={{ width: 150, height: 100, borderRadius: 13, margin: 3 }}\n          region={{\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421,\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  // Chat input field is hidden if the user is not connected\n\n  renderInputToolbar(props) {\n    if (this.state.isConnected == false) {\n    } else {\n      return(\n        <InputToolbar\n        {...props}\n        />\n      );\n    }\n  }\n\n  // CustomActions function \n\n  renderCustomActions = (props) => {\n    return <CustomActions {...props} />;\n  };\n\n  render() {\n\n  let bgColor = this.props.route.params.bgColor;\n\n  return (\n    <View style={styles.container}>\n      <View style={{ backgroundColor: bgColor, width: '100%', height: '100%' }} >        \n      <GiftedChat\n        style={styles.giftedChat}\n        renderBubble={this.renderBubble.bind(this)}\n        renderInputToolbar={this.renderInputToolbar.bind(this)}\n        messages={this.state.messages}\n        showUserAvatar= {true}\n        renderActions={this.renderCustomActions}\n        renderCustomView={this.renderCustomView}\n        onSend={messages => this.onSend(messages)}\n        user={{\n          _id: this.state.user._id,\n          name: this.state.name,\n          avatar: this.state.avatar,  \n         }}/>\n     { Platform.OS === 'android' ? <KeyboardAvoidingView behavior=\"height\" /> : null}\n      <Pressable\n      onPress={() => this.props.navigation.navigate('Start')}>\n        <Text style={styles.startButton}>Go To Start</Text>\n      </Pressable>     \n      </View>\n    </View>\n  );\n }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  startButton: {\n    fontSize: 16,\n    minHeight: 50,\n    alignSelf: 'center',\n    backgroundColor: 'lightblue',\n    borderRadius: 20,\n    textAlignVertical: 'center',\n  },\n  giftedChat: {\n    color: '#000',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}